{"version":3,"sources":["components/imgs/logo-white.svg","components/imgs/logo-pink.svg","components/imgs/icon-info-circle.svg","components/imgs/icon-user-alt.svg","components/imgs/icon-home.svg","components/topo.jsx","components/footer.jsx","components/item.js","components/imgs/icon-search.svg","components/homepage.jsx","components/imgs/login-bg.jpg","components/login.jsx","components/imgs/topo.jsx","components/imgs/about-illustration.svg","components/imgs/icon-github.svg","components/imgs/icon-envelope.svg","components/imgs/icon-linkedin.svg","components/About.js","components/images_v01/icon-home.svg","components/images_v01/icon-power-off.svg","components/search.jsx","index.jsx"],"names":["Topo","useState","changeBackground","setChangeBackground","useEffect","window","addEventListener","scrollY","className","src","logoWhite","logoPink","alt","to","logoSobre","logoLogin","footer","styled","div","breakPoints","width","itemsToShow","Homepage","titulo","setTitulo","contentInput","setContentInput","error","setError","limit","setLimite","setNoHashtag","modalShow","setShowModal","urlImage","setUrlImage","tweets","setTweets","images","setImages","lengthInput","length","getTweets","hashtag","document","getElementById","value","replace","axios","get","method","headers","Authorization","then","resp","data","statuses","getImages","includes","media","onSubmit","event","preventDefault","console","log","takeOutHash","key","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","today","hour","getHours","minutes","getMinutes","currentTime","require","JSON","stringify","url","response","catch","postAirtable","logoSearch","class","id","name","type","placeholder","maxlength","onChange","target","onClick","style","display","classList","add","remove","slice","map","i","index","backgroundImage","handleChange","t","user","profile_image_url","screen_name","text","href","id_str","rel","Login","error2","setError2","userInput","setUserInput","passwordInput","setPasswordInput","submitForm","records","alert","loginBg","iconHome","onKeyPress","e","logoHome","About","state","aboutText","list","this","getSobre","getSquad","fetch","json","responseJson","setState","fields","Sobre","svg","person","Nome","Descrição","Github","iconGit","Email","iconEnvelope","LinkedIn","iconLinkedin","React","Component","Search","Array","_","hashtagList","setHashtagList","infos","info","Hashtag","Data","Hora","homeIcon","exitIcon","itemHeight","loadMoreItems","newList","Promise","resolve","setTimeout","obj","hora","ReactDOM","render","path","component","exact"],"mappings":"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","file":"static/js/main.e2156514.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-white.fd3cc605.svg\";","export default __webpack_public_path__ + \"static/media/logo-pink.96503fc8.svg\";","export default __webpack_public_path__ + \"static/media/icon-info-circle.04710de8.svg\";","export default __webpack_public_path__ + \"static/media/icon-user-alt.525f1ff1.svg\";","export default __webpack_public_path__ + \"static/media/icon-home.c39cad5e.svg\";","import React, { useState, useEffect } from 'react';\r\nimport './topo.css';\r\n\r\n// Import das imagens e icones usados na homepage\r\nimport logoWhite from \"./imgs/logo-white.svg\";\r\nimport logoPink from \"./imgs/logo-pink.svg\";\r\nimport logoSobre from \"./imgs/icon-info-circle.svg\";\r\nimport logoLogin from \"./imgs/icon-user-alt.svg\";\r\nimport logoHome from \"./imgs/icon-home.svg\"\r\n\r\n// Import do router para transação entre páginas\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Topo() {\r\n\r\n    // ----------MENU DO TOPO----------\r\n    const [changeBackground, setChangeBackground] = useState(false);\r\n\r\n    useEffect(function () {\r\n        function scrollPosition() { //função para verificar a posição do scroll\r\n            if (window.scrollY > 600) { //se o scroll descer mais que 620\r\n                setChangeBackground(true);\r\n            } else {\r\n                setChangeBackground(false);\r\n            }\r\n        }\r\n        window.addEventListener('scroll', scrollPosition);\r\n    }, []);\r\n\r\n    // Função para mudar a logo do topo\r\n    function pickLogo() {\r\n\r\n        if (changeBackground == 0) { // se não tiver scroll, mostar logo branca\r\n            return logoWhite;\r\n        } if (changeBackground > 0) { // se tiver scroll, mostrar logo rosa\r\n            return logoPink;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className={changeBackground ? 'topUnfixed' : 'topFixed'}>\r\n                {/* LOGO */}\r\n                <img src={pickLogo()} alt=\"Logo\" className=\"logo\"></img>\r\n                {/* BOTÕES DO TOPO */}\r\n                <div className=\"buttons\">\r\n                    {/* BOTÃO SOBRE */}\r\n                    <Link to=\"/About\" className=\"linkRoute\">\r\n                        <button className=\"aboutButton\">\r\n                            <img src={logoSobre} alt=\"logoSobre\" className=\"logoSobre\"></img>\r\n                            <span>Sobre</span>\r\n                        </button></Link>\r\n\r\n                    {/* BOTÃO LOGIN */}\r\n                    <Link to=\"/login\" className=\"linkRoute\">\r\n                        <button className=\"loginButton\">\r\n                            <img src={logoLogin} alt=\"logoLogin\" className=\"logoLogin\"></img>\r\n                            <span>Login</span>\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Topo;","import React from 'react';\r\nimport './footer.css';\r\n\r\nfunction footer() {\r\n\r\n    return (\r\n        <>\r\n\r\n        <div className=\"containerBody\"></div>\r\n            {/* FOOTER */}\r\n            <footer className=\"footer\">\r\n                @NewTab Academy 2021. Todos os direitos reservados\r\n            </footer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default footer;","import styled from \"styled-components\";\r\n\r\nexport default styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 287px;\r\n  width: 287px;\r\n  background-color: none;\r\n  color: #fff;\r\n  margin: 0 15px; \r\n  font-size: 4em;\r\n  border: 0px solid black;\r\n  border-radius: 21px;\r\n  box-shadow: 0px 9px 27px #5538EE29;\r\n  flex-direction: row;\r\n`;  ","export default __webpack_public_path__ + \"static/media/icon-search.57ca2231.svg\";","import React from 'react';\r\nimport './homepage.css';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport Topo from './topo'\r\nimport Footer from './footer'\r\n\r\n// Import do router para transação entre páginas\r\nimport { Link } from 'react-router-dom'\r\n\r\n// Import do carousel e styled-components(css) das imagens \r\nimport Carousel from \"react-elastic-carousel\";\r\nimport Item from './item.js';\r\n\r\n// Import das imagens e icones usados na homepage\r\nimport logoSearch from \"./imgs/icon-search.svg\"\r\n\r\n\r\n// Const para a \"quebra de linha\" do resultado das imagens\r\nconst breakPoints = [\r\n    { width: 1, itemsToShow: 1 },\r\n    { width: 550, itemsToShow: 2 },\r\n    { width: 900, itemsToShow: 3 },\r\n    { width: 1200, itemsToShow: 5 },\r\n];\r\n\r\n\r\n\r\nfunction Homepage() {\r\n\r\n    // Const do titulo da hashtag pesquisada\r\n    const [titulo, setTitulo] = useState('');\r\n    // Const do conteúdo digitado no input para pesquisa da hashtag\r\n    const [contentInput, setContentInput] = useState('');\r\n    // Const menssagem validação\r\n    const [error, setError] = useState(null);\r\n    // Const menssagem limite caracteres\r\n    const [limit, setLimite] = useState(null);\r\n    // Const para retirar hashtag\r\n    const [noHashtag, setNoHashtag] = useState('');\r\n    // Const para habilitar as funcionalidades\r\n    let [modalShow, setShowModal] = useState(false);\r\n    // Const para setar imagens da busca\r\n    let [urlImage, setUrlImage] = useState('');\r\n    // Const dos tweets (resultado da busca)\r\n    let [tweets, setTweets] = useState([]);\r\n    // Const das das imagens (resultado da busca)\r\n    let [images, setImages] = useState([]);\r\n    // Tamanho do que foi escrito no input\r\n    const lengthInput = contentInput.length;\r\n    // Contador do limite de caracteres do  input\r\n    // const limitCaracteres = 20 - lengthInput;\r\n\r\n    // Função que resgata o valor preenchido no input\r\n    function handleTextChange(event) {\r\n        setContentInput(event.target.value); // guarda o valor preenchido no content Input\r\n        setTitulo(event.target.value); // guardo o valor pra exibir no h1 dos resultados\r\n\r\n        \r\n        //Condicional para aparecer mensagem de limite de caracteres\r\n        if (lengthInput < 20) { // em quanto não tiver 20 caracteres, não mostrar aviso\r\n            setLimite(null); // variável sem valor - não aparece nada\r\n            console.log(limit)\r\n        } if (lengthInput >= 19) { // a partir de 19 caracteres\r\n            setLimite(\"Limite de caracteres atingido!\"); // aparecer aviso\r\n            console.log(limit)\r\n        }\r\n        \r\n    }\r\n\r\n    // Função de submit do formulário que chama a função para registro na airtable\r\n    function submitForm(event) {\r\n        event.preventDefault(); // evita recarregamento da página\r\n\r\n\r\n        if (contentInput.length == 0) { // se o campo estiver vazio, impede que seja registrado\r\n            setError('Campo obrigatório!'); // faz aparecer a div com a mensagem de campo obrigatório\r\n        } else {\r\n            setError(null); // div não aparece - não tem conteúdo\r\n            console.log(\"chama função post\")\r\n            console.log('CONTEÚDO DIGITADO', contentInput);\r\n\r\n\r\n            // postSearch(); // chamda da função que registra na airtable\r\n\r\n            // retirada da hashtag para requisição da api do twitter\r\n            let takeOutHash = contentInput;\r\n            getTweets(takeOutHash.replace(/#/g, ''));\r\n            getImages(takeOutHash.replace(/#/g, ''));\r\n            setNoHashtag(takeOutHash.replace(/#/g, ''));\r\n            setContentInput('');\r\n\r\n        }\r\n\r\n        // Condicional que chama as funções de pesquisa ao apertar a tecla Enter\r\n        if (event.key === 'Enter') {\r\n            getTweets()\r\n            getImages()\r\n            postAirtable()\r\n        }\r\n    }\r\n\r\n    // Função onClick para dar zoom na imagem do resultado\r\n    function handleChange(event) {\r\n        let id = event.target.id\r\n        setUrlImage(document.getElementById(id).style.backgroundImage.replace('url(\"', \"\").replace('\")', \"\"))\r\n        setShowModal(true)\r\n\r\n        setContentInput(event.target.value);\r\n\r\n    }\r\n\r\n    // Função para mostrar os resultados das imagens\r\n    function showImages() {\r\n        document.getElementById(\"postResultsImages\").style.display = 'flex'\r\n        document.getElementById(\"postResultsText\").style.display = 'none'\r\n        document.getElementById(\"selectImages\").classList.add(\"active\")\r\n        document.getElementById(\"selectTweets\").classList.remove(\"active\")\r\n    }\r\n\r\n    // Função para mostrar os resultados em texto\r\n    function showText() {\r\n        document.getElementById(\"postResultsText\").style.display = 'block'\r\n        document.getElementById(\"postResultsImages\").style.display = 'none'\r\n        document.getElementById(\"selectTweets\").classList.add(\"active\")\r\n        document.getElementById(\"selectImages\").classList.remove(\"active\")\r\n    }\r\n\r\n    // Função com axios que faz a requisição dos tweets em texto na API do Twitter\r\n    function getTweets() {\r\n        let hashtag = document.getElementById('enter').value.replace(/#/g, \"\")\r\n        axios.get('https://cors.bridged.cc/https://api.twitter.com/1.1/search/tweets.json?q=' + hashtag + '&lang=pt&result_type=recent', {\r\n            method: 'GET',\r\n            headers: {\r\n                Authorization: 'Bearer AAAAAAAAAAAAAAAAAAAAAFlKHgEAAAAApBW4nRyRkiogluzAbXlS4KuHlMU%3DFcR7r8N19LRnMHLVmYlFsod6Be6zUvZD2rxATotl6mLPAh2UEX'\r\n            },\r\n        }).then((resp) => { setTweets(resp.data.statuses) })\r\n    }\r\n\r\n    // Função com axios que faz a requisição dos tweets em imagem na API do Twitter\r\n    function getImages() {\r\n        let hashtag = document.getElementById('enter').value.replace(/#/g, \"\")\r\n        axios.get('https://cors.bridged.cc/https://api.twitter.com/2/tweets/search/recent?query=' + hashtag + '%20has:images&max_results=50&expansions=author_id,attachments.media_keys&media.fields=type,url,width,height', {\r\n            method: 'GET',\r\n            headers: {\r\n                Authorization: 'Bearer AAAAAAAAAAAAAAAAAAAAAFlKHgEAAAAApBW4nRyRkiogluzAbXlS4KuHlMU%3DFcR7r8N19LRnMHLVmYlFsod6Be6zUvZD2rxATotl6mLPAh2UEX'\r\n            },\r\n        }).then((resp) => { setImages(resp.data.includes.media) })\r\n    }\r\n\r\n    // Função que registra o que foi pesquisado na searchBar na airtable\r\n    function postAirtable() {\r\n        let hashtag = document.getElementById('enter').value.replace(/#/g, \"\")\r\n\r\n        // Variável para identificar a data em que foi realizada a pesquisa\r\n        var data = new Date()\r\n        var day = String(data.getDate()).padStart(2, '0')\r\n        var month = String(data.getMonth() + 1).padStart(2, '0')\r\n        var year = data.getFullYear()\r\n        var today = day + '/' + month + '/' + year\r\n\r\n        // Variável para identificar a hora em que foi realizada a pesquisa\r\n        var hour = String(data.getHours()).padStart(2, '0')\r\n        var minutes = String(data.getMinutes()).padStart(2, '0')\r\n        var currentTime = hour + ':' + minutes\r\n\r\n        var axios = require('axios');\r\n        var data = JSON.stringify({\r\n            \"records\": [\r\n                {\r\n                    \"fields\": {\r\n                        \"Squad\": \"52\",\r\n                        \"Hashtag\": hashtag,\r\n                        \"Data\": today,\r\n                        \"Hora\": currentTime\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n\r\n        // Parâmetros necessário para o post através da API da airtable \r\n        var config = {\r\n            method: 'post',\r\n            url: 'https://api.airtable.com/v0/app6wQWfM6eJngkD4/Buscas',\r\n            headers: {\r\n                'Authorization': 'Bearer key2CwkHb0CKumjuM',\r\n                'Content-Type': 'application/json',\r\n                'Cookie': 'brw=brwT6txT287hmhYVt'\r\n            },\r\n            data: data\r\n        };\r\n        axios(config)\r\n            .then(function (response) { })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    // const handler = (event) => {\r\n    //     if (event.key === 'Enter') {\r\n    //         getTweets()\r\n    //         getImages()\r\n    //         postAirtable()\r\n    //     }\r\n    // }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className=\"homepage\">\r\n\r\n                {/* HEADER */}\r\n                <header className=\"banner\">\r\n                    <Topo />\r\n\r\n                    {/* CAIXA DE TEXTO DO BANNER */}\r\n                    <div className=\"textBox\">\r\n                        <h1 className=\"title\"> Encontre hashtags de maneira fácil  </h1>\r\n                        <p className=\"subtitle\"> Digite o que deseja no campo de buscas e confira os resultados do Twitter abaixo </p>\r\n                    </div>\r\n                </header>\r\n\r\n                {/* INPUT DA PESQUISA */}\r\n                <div className=\"containerInput\">\r\n                    <div className=\"inputDiv\">\r\n                        <form className=\"form\" onSubmit={submitForm}>\r\n                            <img src={logoSearch} alt=\"logoSearch\" class=\"logoSearch\"></img>\r\n                            <input\r\n                                id=\"enter\"\r\n                                name=\"searchBar\"\r\n                                type=\"text\"\r\n                                className=\"searchBar\"\r\n                                placeholder=\"Buscar...\"\r\n                                maxlength=\"20\"\r\n                                data-ls-module=\"charCounter\"\r\n                                value={contentInput}\r\n                                onChange={handleTextChange}\r\n                            >\r\n                                {/* onKeyPress={(e) => handler(e)} */}\r\n                            </input>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* VALIDAÇÃO */}\r\n                {/* limite de caracteres */}\r\n                <div className=\"validationLimit\">\r\n                    {limit && <p className=\"errorMessage\">{limit}</p>}\r\n                </div>\r\n                {/* campo obrigatório */}\r\n                <div className=\"validationError\">\r\n                    {error && <p className=\"errorMessage\">{error}</p>}\r\n                </div>\r\n\r\n                {/* CORPO DO SITE COM OS RESULTADOS DA PESQUISA */}\r\n\r\n                {/* TÍTULO DOS RESULTADOS */}\r\n                <h1 className=\"searchTitle\">\r\n                    Exibindo os 10 resultados mais recentes de #{titulo}\r\n                </h1>\r\n\r\n                <div className=\"postResultSelect\">\r\n                    <div id=\"selectTweets\" className=\"active\" onClick={showText}>\r\n                        <p>Tweets</p>\r\n                    </div>\r\n                    <div id=\"selectImages\" onClick={showImages}>\r\n                        <p>Imagens</p>\r\n                    </div>\r\n                </div>\r\n\r\n                 {/* CAROUSEL DAS IMAGENS */}\r\n                 <div id=\"postResultsImages\" className=\"postResultsImages\">\r\n                    <Carousel className=\"carousel\" breakPoints={breakPoints}>\r\n                        {images.slice(0, 10).map((i, index) => {\r\n                            return (\r\n                                <Item>\r\n                                    \r\n                                    <div className=\"imageContainer\" key={index} >\r\n                                    \r\n\r\n                                        <div\r\n                                            id={\"imageContent\" + index}\r\n                                            className=\"imageContent\"\r\n                                            onClick={(event) =>\r\n                                                handleChange(event)}\r\n                                            style={{ backgroundImage: `url(${i.url})` }}>\r\n\r\n                                        </div>\r\n                                    \r\n\r\n                                        <div className=\"textContent\">\r\n                                            <p>Postado por: @</p>\r\n                                            <p>@username</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </Item>\r\n                            )\r\n                        })}\r\n                    </Carousel>\r\n                </div>\r\n\r\n\r\n                {/* RESULTADOS DOS TWEETS EM TEXTO */}\r\n                <div id=\"postResultsText\" className=\"postResultsText\">\r\n                    <div className=\"resultPosts\">\r\n                        <div className=\"postContainer\" >\r\n                            {/* MAP PARA EXIBIR OS RESULTADOS DE TEXTO */}\r\n                            {tweets.slice(0, 10).map((t, index) => {\r\n                                return (\r\n                                    <div className=\"postBox\" key={index}>\r\n                                        {/* DIV QUE CONTÉM O ICON DO USUARIO */}\r\n                                        <div className=\"divImgTweet\">\r\n                                            <img className=\"postImg\" style={{ backgroundImage: `url(${t.user.profile_image_url})` }}></img>\r\n                                        </div>\r\n                                        {/* DIV COM DEMAIS INFORMAÇÕES E TWEET */}\r\n                                        <div className=\"textBoxTweet\">\r\n                                            <div className=\"userBoxTweet\">\r\n                                                <div className=\"postUser\">{t.user.name}</div>\r\n                                                <div className=\"postUsername\">@{t.user.screen_name}</div>\r\n                                            </div>\r\n                                            <div className=\"postText\">{t.text}</div>\r\n                                            {/* LINK PARA O TWEET ORIGINAL */}\r\n                                            <a className=\"postLink\" href={'https://twitter.com/' + t.user.screen_name + '/status/' + t.id_str} target=\"_blank\" rel=\"noreferrer\">Ver mais no Twitter</a>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* MODAIS DO ZOOM DAS IMAGENS BUSCADAS */}\r\n            <div className=\"backdrop\" style={{ display: (modalShow ? 'block' : 'none') }} onClick={() => setShowModal(false)}></div>\r\n\r\n            <div className=\"modalContainer\" style={{ display: (modalShow ? 'block' : 'none') }}>\r\n                <div className=\"modalContent\" style={{ backgroundImage: `url(${urlImage})` }}>\r\n                    <div className=\"close\" style={{ display: (modalShow ? 'block' : 'none') }} onClick={() => setShowModal(false)}>\r\n                        Close\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* ROTA DO FOOTER */}\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage;","export default __webpack_public_path__ + \"static/media/login-bg.f2411a57.jpg\";","import { useState } from 'react';\r\nimport \"./login.css\"\r\nimport loginBg from './imgs/login-bg.jpg'\r\nimport logoWhite from './imgs/logo-white.svg'\r\nimport iconHome from './imgs/icon-home.svg'\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\n\r\nfunction Login() {\r\n\r\n    // Const menssagem validação\r\n    const [error, setError] = useState(null);\r\n    const [error2, setError2] = useState(null);\r\n    // Inputs no form \r\n    const [userInput, setUserInput] = useState('');\r\n    const [passwordInput, setPasswordInput] = useState('');\r\n\r\n    let [modalShow, setShowModal] = useState(false);\r\n\r\n    function submitForm(event) {\r\n        // event.preventDefault(); // evita recarregamento da página\r\n        if (userInput.length == 0) { // se o campo estiver vazio, impede que seja registrado\r\n            // Campo não preechido \r\n            setError('Campo obrigatório!'); // Aparece mensagem de erro\r\n            event.preventDefault();\r\n            return false;\r\n        } else if (passwordInput.length == 0) {\r\n            // Campo não preechido \r\n            setError('')\r\n            setError2('Campo obrigatório!') // Aparece mensagem de erro \r\n            event.preventDefault();\r\n            return false;\r\n        } else {\r\n            // Mensagem de erro é apagada \r\n            setError(null);\r\n            setError2(null);\r\n            console.log('CREDENCIAIS DE USUARIO =>', 'USER:', userInput, \"SENHA:\", passwordInput);\r\n            // console.log('passou')\r\n            axios.get('https://api.airtable.com/v0/app6wQWfM6eJngkD4/Login?maxRecords=3&view=Grid%20view&filterByFormula=(AND({Email}=%22' + userInput + '%22,{Senha}=%22' + passwordInput + '%22))', {\r\n                headers: {\r\n                    \"Authorization\": \"Bearer key2CwkHb0CKumjuM\"\r\n                }\r\n            }).then((response) => {\r\n                if (response.data.records.length == 0) {\r\n                    alert('Email e/ou Senha inválidos')\r\n                    event.preventDefault();\r\n                    return false;\r\n                } else {\r\n                    console.log(response.data.records.length)\r\n                    setShowModal(true)\r\n                    return true;\r\n\r\n                }\r\n            })\r\n                .catch(() => {\r\n                    console.log('deu errado')\r\n                })\r\n        }\r\n    }\r\n\r\n    function handleTextChange(event) {\r\n        setUserInput(event.target.value); // guarda o valor preenchido no content Input\r\n    }\r\n\r\n    function handleTextChange2(event) {\r\n        setPasswordInput(event.target.value); // guarda o valor preenchido no content Input\r\n    }\r\n\r\n\r\n    const handler = (event) => {\r\n        if (event.key === 'Enter') {\r\n            submitForm();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"containerLogin\">\r\n            <img src={loginBg} className=\"backgroundImg\"></img>\r\n            <div className=\"headerLogin\">\r\n                <img src={logoWhite} className=\"itensHeader\"></img>\r\n                <Link to=\"/\"><button className=\"butHome itensHeader\"><img src={iconHome}></img> <span>Home</span></button></Link>\r\n            </div>\r\n            <div className=\"loginBox\" >\r\n                <h1 className=\"titleBox\">Login</h1>\r\n                <form className=\"formLogin\" onKeyPress={(e) => handler(e)}>\r\n                    <input\r\n                        className=\"itensLogin\"\r\n                        placeholder=\"Usuário\"\r\n                        value={userInput} // valor do input \r\n                        onChange={handleTextChange}  // guarda o valor preenchido \r\n                    />\r\n                    {error && <p className=\"invalidUser\">{error}</p>}\r\n                    <input\r\n                        className=\"itensLogin\"\r\n                        type=\"password\"\r\n                        placeholder=\"Senha\"\r\n                        value={passwordInput} // valor do input \r\n                        onChange={handleTextChange2} // guarda o valor preenchido\r\n                    />\r\n                    {error2 && <p className=\"invalidUser\">{error2}</p>}\r\n                </form>\r\n                <button className=\"buttonLogin\" type=\"submit\" onClick={submitForm}> Acessar </button>\r\n            </div>\r\n\r\n            <div className=\"backdrop\" style={{ display: (modalShow ? 'block' : 'none') }} onSubmit={() => setShowModal(false)}></div>\r\n\r\n            <div className=\"modalContainer\" style={{ display: (modalShow ? 'block' : 'none') }}>\r\n                <div className=\"modalContent\"> <h1>Acesso liberado</h1>\r\n                    <Link to=\"/search\"><button className=\"buttonModal\" type=\"submit\">Continuar</button></Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Login;","import React, { useState, useEffect } from 'react';\r\nimport './topo.css';\r\n\r\n// Import das imagens e icones usados na homepage\r\nimport logoWhite from \"./logo-white.svg\";\r\nimport logoPink from \"./logo-pink.svg\";\r\nimport logoSobre from \"./icon-info-circle.svg\";\r\nimport logoLogin from \"./icon-user-alt.svg\";\r\nimport logoHome from \"./icon-home.svg\"\r\n\r\n// Import do router para transação entre páginas\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Topo() {\r\n\r\n    // ----------MENU DO TOPO----------\r\n    const [changeBackground, setChangeBackground] = useState(false);\r\n\r\n    useEffect(function () {\r\n        function scrollPosition() { //função para verificar a posição do scroll\r\n            if (window.scrollY > 600) { //se o scroll descer mais que 620\r\n                setChangeBackground(true);\r\n            } else {\r\n                setChangeBackground(false);\r\n            }\r\n        }\r\n        window.addEventListener('scroll', scrollPosition);\r\n    }, []);\r\n\r\n    // Função para mudar a logo do topo\r\n    function pickLogo() {\r\n\r\n        if (changeBackground == 0) { // se não tiver scroll, mostar logo branca\r\n            return logoWhite;\r\n        } if (changeBackground > 0) { // se tiver scroll, mostrar logo rosa\r\n            return logoPink;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className={changeBackground ? 'topUnfixed' : 'topFixed'}>\r\n                {/* LOGO */}\r\n                <img src={pickLogo()} alt=\"Logo\" className=\"logo\"></img>\r\n                {/* BOTÕES DO TOPO */}\r\n                <div className=\"buttons\">\r\n                    {/* BOTÃO SOBRE */}\r\n                    <Link to=\"/\" className=\"linkRoute\">\r\n                        <button className=\"aboutButton\">\r\n                            <img src={logoHome} alt=\"logoSobre\" className=\"logoSobre\"></img>\r\n                            <span>Home</span>\r\n                        </button></Link>\r\n\r\n                    {/* BOTÃO LOGIN */}\r\n                    <Link to=\"/login\" className=\"linkRoute\">\r\n                        <button className=\"loginButton\">\r\n                            <img src={logoLogin} alt=\"logoLogin\" className=\"logoLogin\"></img>\r\n                            <span>Login</span>\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Topo;","export default __webpack_public_path__ + \"static/media/about-illustration.b1365d34.svg\";","export default __webpack_public_path__ + \"static/media/icon-github.9939c646.svg\";","export default __webpack_public_path__ + \"static/media/icon-envelope.552d69e3.svg\";","export default __webpack_public_path__ + \"static/media/icon-linkedin.c0c953a6.svg\";","import React from 'react';\r\nimport './About.css';\r\nimport Topo from './imgs/topo'\r\n\r\n//Icons\r\nimport svg from './imgs/about-illustration.svg';\r\nimport iconGit from './imgs/icon-github.svg';\r\nimport iconEnvelope from './imgs/icon-envelope.svg';\r\nimport iconLinkedin from './imgs/icon-linkedin.svg';\r\n\r\n\r\nexport default class About extends React.Component{\r\n\r\nstate = {\r\n    aboutText:\"\",\r\n    list:[]\r\n  }\r\n\r\n  /* =================  PUXANDO API TEXTO DO PROJETO  --------------*/\r\n  componentDidMount(){\r\n    this.getSobre()\r\n    this.getSquad()\r\n  }\r\n\r\n   getSobre(){\r\n    fetch(\"https://api.airtable.com/v0/app6wQWfM6eJngkD4/Projeto?api_key=key2CwkHb0CKumjuM&filterByFormula=({Squad}='52')\", {\r\n    })\r\n    .then(response => response.json())\r\n    .then(responseJson => {\r\n        this.setState({aboutText:responseJson.records[0].fields.Sobre})\r\n    })\r\n  }\r\n\r\n  /*------  PUXANDO INFOS EQUIPE API  --------------------*/\r\n\r\n  getSquad(){\r\n    fetch(\"https://api.airtable.com/v0/app6wQWfM6eJngkD4/Equipe?api_key=key2CwkHb0CKumjuM&filterByFormula=({Squad}='52')\", {\r\n    })\r\n    .then(response => response.json())\r\n    .then(responseJson => {\r\n        this.setState({list:responseJson.records})\r\n        console.log(responseJson)\r\n    })\r\n  }\r\n\r\n \r\n  render() {\r\n    \r\n\r\n    return (\r\n        <div className=\"aboutWrapper\">\r\n            <div className=\"aboutHeader\">\r\n                <section className=\"header\">\r\n                    <div className=\"headerContent\">\r\n                        <div className=\"headerLogo\">\r\n                        <Topo/>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <h1 className=\"aboutProject\">Sobre o projeto</h1>\r\n            </div>\r\n            <div className=\"aboutText\">\r\n                <div className=\"aboutAside\">\r\n                    <h3>O que é</h3>\r\n                    <p>{this.state.aboutText}</p>\r\n                </div>\r\n                <img src={svg} alt=\"Logo\" className=\"aboutSvg\" />\r\n            </div>\r\n            <h1 className=\"aboutWe\">Quem somos nós</h1>\r\n            <div className=\"wrapperPhoto\">\r\n                <div className=\"aboutTeam\">\r\n                    {this.state.list.map((person, index) => {\r\n                    if(person.fields.Nome != \"Leonardo\"){\r\n                    return(\r\n                    <div className=\"aboutCard\" key={'person-card' + index}>\r\n                        <div className=\"about-team-wrapper\">\r\n                            <div className=\"aboutPhoto\">\r\n                            <img src={person.fields['Imagem'][0].url}></img>\r\n                            </div>\r\n                            <h2>{person.fields.Nome}</h2>\r\n                            <p>{person.fields.Descrição}</p>\r\n                            <div className=\"aboutSocials\">\r\n                            <a href={person.fields.Github}><img src={iconGit} alt=\"GitHub\" className=\"iconGit\" /></a>\r\n                            <a href={person.fields.Email}><img src={iconEnvelope} alt=\"e-mail\" className=\"iconEnvelope\" /></a>\r\n                            <a href={person.fields.LinkedIn}><img src={iconLinkedin} alt=\"Linkedin\" className=\"iconLinkedin\" /></a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                }\r\n              })}\r\n                </div>\r\n                \r\n            </div>\r\n            <footer className=\"footer\">\r\n                @NewTab Academy 2021. Todos os direitos reservados\r\n            </footer>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n};\r\n","export default __webpack_public_path__ + \"static/media/icon-home.c39cad5e.svg\";","export default __webpack_public_path__ + \"static/media/icon-power-off.82d053be.svg\";","import React from 'react';\r\nimport axios from 'axios';\r\nimport './search.css';\r\nimport homeIcon from './images_v01/icon-home.svg'\r\nimport exitIcon from './images_v01/icon-power-off.svg'\r\nimport {Link} from 'react-router-dom'\r\nimport loginBg from './imgs/login-bg.jpg'\r\nimport { useEffect, useState } from 'react';\r\n\r\n\r\n\r\nfunction Search() {\r\n\r\n    \r\n    const [hashtagList, setHashtagList] = useState([...Array(100)].map((_, index) => index)); // guarda as hashtags registradas na API\r\n\r\n      {/* função que carrega mais resultados depois que o scroll chega no fim da pagina */} \r\n    const fetchItems = () => {\r\n        console.log('fetchItems');\r\n        const newList = [...Array(100)].map((_, index) => hashtagList.length + index);\r\n        \r\n\r\n     //  const newList = () => {\r\n    //      axios.get(\"https://api.airtable.com/v0/app6wQWfM6eJngkD4/tbl4mrtX1Owvos7eB?filterByFormula=%7BSquad%7D+%3D+'52'&//maxRecords=100&pageSize=100&sort%5B0%5D%5Bfield%5D=Data&sort%5B0%5D%5Bdirection%5D=asc&sort%5B1%5D%5Bfield%5D=Hora&//sort%5B1%5D%5Bdirection%5D=asc&timeZone=America/Sao_Paulo&api_key=key2CwkHb0CKumjuM\", {\r\n    //     headers: {\r\n    //          \"Authorization\": \"Bearer key2CwkHb0CKumjuM\"\r\n    //      }\r\n    //  })\r\n    //  }\r\n    \r\n        return new Promise(resolve => {\r\n          setTimeout(() => {\r\n            setHashtagList([...hashtagList, ...newList]);\r\n            resolve();\r\n          }, 100);\r\n          \r\n        });\r\n      };\r\n        \r\n\r\n       useEffect(() => {\r\n           axios.get(\"https://api.airtable.com/v0/app6wQWfM6eJngkD4/tbl4mrtX1Owvos7eB?filterByFormula=%7BSquad%7D+%3D+'52'&maxRecords=50&  pageSize=50&sort%5B0%5D%5Bfield%5D=Data&sort%5B0%5D%5Bdirection%5D=asc&sort%5B1%5D%5Bfield%5D=Hora&sort%5B1%5D%5Bdirection%5D=asc&   timeZone=America/Sao_Paulo&api_key=key2CwkHb0CKumjuM\", {\r\n             headers: {\r\n                 \"Authorization\": \"Bearer key2CwkHb0CKumjuM\"\r\n             }\r\n         }).then (response => {\r\n                 const infos = response.data.records.map (\r\n                     info => {\r\n                         return {\r\n                             \"squad\": '52',\r\n                             \"hashtag\": info.fields.Hashtag,\r\n                             \"data\": info.fields.Data,\r\n                             \"hora\": info.fields.Hora\r\n                         }\r\n                     }\r\n                 )\r\n                 setHashtagList(infos);\r\n                     console.log(infos);\r\n                 }\r\n         )\r\n     }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n       \r\n        {/* navegador */}   \r\n        <div className=\"containerSearch\">\r\n        <img src={loginBg} className=\"backgroundImg\"></img>\r\n\r\n        <div>            \r\n            <div class=\"header\">\r\n                <p class=\"homeTitle\">hashtag<strong>finder</strong></p>\r\n                \r\n                {/* botão HOME */} \r\n                <Link to=\"/\" className=\"linkRoute\">\r\n                <button class=\"homeButton\">\r\n                    <img src={homeIcon} alt=\"home-icon\"/>\r\n                    HOME\r\n                </button>\r\n                </Link>\r\n                {/* botão SAIR */} \r\n                <Link to=\"/\" className=\"linkRoute\">\r\n                <button class=\"exitButton\">\r\n                    <img src={exitIcon} alt=\"home-icon\"/>\r\n                    SAIR\r\n                </button>\r\n                </Link>\r\n            </div>\r\n\r\n        {/* listagem das hashtags */} \r\n        <div class=\"containerTitle\">\r\n            <h1>Buscas realizadas</h1>\r\n        </div>\r\n\r\n        <div class=\"container\"> \r\n            <thead>\r\n                <tr>\r\n                    <th>Hashtag</th>\r\n                    <th>Data</th>\r\n                    <th>Hora</th>\r\n                </tr>\r\n            </thead>\r\n\r\n\r\n        {/* INFINITE LOADING */}\r\n            <div\r\n                //hasMoreItems\r\n                itemHeight={50} //altura das células da tabela\r\n                loadMoreItems={fetchItems} //função que carrega mais resultados depois que o scroll chega no fim da pagina\r\n                >\r\n            {hashtagList.map ((obj, i) => {\r\n                return(\r\n                    <div className=\"App\">\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                               <td>{obj.hashtag}</td>\r\n                               <td>{obj.data}</td>\r\n                               <td>{obj.hora}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    </div>\r\n                 )\r\n            })}\r\n            \r\n          </div>\r\n\r\n        </div> \r\n    \r\n    </div>\r\n</div>\r\n</>\r\n\r\n    )\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Homepage from './components/homepage'\r\nimport Login from './components/login'\r\nimport About from './components/About'\r\nimport Search from './components/search'\r\nimport {HashRouter, BrowserRouter, Switch, Route} from 'react-router-dom'\r\n\r\n\r\n// Utilizando react-router-dom para fazer as rotas entre as páginas \r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Switch>\r\n      <Route path=\"/\" component={Homepage} exact/>\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/About\" component={About} />\r\n      <Route path=\"/search\" component={Search} />\r\n    </Switch>\r\n  </HashRouter>,\r\n\r\n  document.getElementById('root')\r\n\r\n);\r\n\r\n"],"sourceRoot":""}